---
# Install proxmox-backup-client
- name: Pin PBS client packages
  copy:
    dest: /etc/apt/preferences.d/pbs-client
    mode: "0644"
    content: |
      Package: proxmox-backup-client
      Pin: origin "download.proxmox.com"
      Pin-Priority: 700

      Package: *
      Pin: origin "download.proxmox.com"
      Pin-Priority: 100

- name: Install Proxmox archive keyring
  ansible.builtin.get_url:
    url: "{{ pbc_keyring_url }}"
    dest: "{{ pbc_keyring_path }}"
    mode: "0644"
  when: pbc_install_client

- name: Configure deb822 source for PBS client
  ansible.builtin.copy:
    dest: "{{ pbc_client_apt_sources_file }}"
    mode: "0644"
    content: |
      Types: deb
      URIs: http://download.proxmox.com/debian/pbs-client
      Suites: {{ pbc_client_suite }}
      Components: main
      Signed-By: {{ pbc_keyring_path }}
  when: pbc_install_client

- name: apt update
  ansible.builtin.apt:
    update_cache: true
  when: pbc_install_client

- name: Install proxmox-backup-client
  ansible.builtin.package:
    name: proxmox-backup-client
    state: present
  when: pbc_install_client

# Install pbc wrapper scripts
- name: Ensure base directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ pbc_user }}"
    group: "{{ pbc_user }}"
    mode: "0755"
  loop:
    - "{{ pbc_bin_dir }}"
    - "{{ pbc_env_dir }}"

- name: Clone pbc-scripts from repo
  ansible.builtin.git:
    repo: "{{ pbc_repo }}"
    dest: "{{ pbc_src_dir }}"
    version: "{{ pbc_version }}"
    update: true
  become_user: "{{ pbc_user }}"

- name: Symlink scripts into {{ pbc_bin_dir }}
  ansible.builtin.file:
    src: "{{ pbc_src_dir }}/scripts/{{ item }}"
    dest: "{{ pbc_bin_dir }}/{{ item }}"
    state: link
  loop:
    - "backup-to-pbs.sh"
    - "list-pbs-snapshots.sh"
    - "pbs-environment.sh"
    - "restore-pbs-backup.sh"

- name: Check if Proxmox Backup Client environment file exists
  ansible.builtin.stat:
    path: "{{ pbc_env_file }}"
  register: pbc_env_file_stat

- name: Write Proxmox Backup Client environment file
  ansible.builtin.template:
    src: "pbc.env.j2"
    dest: "{{ pbc_env_file }}"
    owner: "{{ pbc_user }}"
    group: "{{ pbc_user }}"
    mode: "0600"
  when: not pbc_env_file_stat.stat.exists

- name: Ensure zsh extension dir (optional)
  when: pbc_install_zsh_extension
  ansible.builtin.file:
    path: "{{ pbc_zsh_ext_dir }}"
    state: directory
    owner: "{{ pbc_user }}"
    group: "{{ pbc_user }}"
    mode: "0755"

- name: Write zsh extension to export env (optional)
  when: pbc_install_zsh_extension
  ansible.builtin.template:
    src: "pbc-env.zsh.j2"
    dest: "{{ pbc_zsh_ext_file }}"
    owner: "{{ pbc_user }}"
    group: "{{ pbc_user }}"
    mode: "0640"

- name: Reminder to edit PBS_PASSWORD in the config file
  ansible.builtin.debug:
    msg: |
      Please edit the PBS_PASSWORD variable in {{ pbc_env_file }} to set your Proxmox Backup Server password.
